syntax = "proto3";

option go_package = "github.com/lashajini/mind-palace/proto";

import "SharedTypes.proto";

service Addon {
  rpc ApplyAddon(JoinedAddons) returns (AddonResult) {}
  rpc JoinAddons(Resource) returns (JoinedAddonsResponse) {}

  rpc Ping(SharedTypes.Empty) returns (SharedTypes.Empty) {}
}

service LLM {
  rpc TokenSize(Text) returns (Size) {}
  rpc CalculateAvailableTokens(DecrementList) returns (Size) {}

  rpc GetConfig(SharedTypes.Empty) returns (LLMConfig) {}
  rpc SetConfig(LLMConfig) returns (SharedTypes.Empty) {}
}

service EmbeddingModel {
  rpc CalculateEmbeddings(Text) returns (Embeddings) {}

  rpc GetConfig(SharedTypes.Empty) returns (EmbeddingModelConfig) {}
}

message AddonResult {
  map<string, AddonResponse> map = 1;
}

message JoinedAddons {
  string file = 1;
  JoinedAddon addons = 2;
}

message JoinedAddonsResponse {
  repeated JoinedAddon addons = 1;
}

message JoinedAddon {
  repeated string names = 1;
  bool joined = 2;
}

message AddonResponse {
  oneof addon_responses {
    DefaultResponse default_response = 1;
    SummaryResponse summary_response = 2;
    KeywordsResponse keywords_response = 3;
  }
  bool success = 4;
}

message DefaultResponse {
  string default = 1;
}

message SummaryResponse {
  string summary = 1;
}

message KeywordsResponse {
  repeated KeywordChunk list = 1;

  message KeywordChunk {
    repeated string keywords = 1;
    string chunk = 2;
  }
}

message Resource {
  string file = 1;
  repeated string steps = 2;
}

message Text {
  string text = 1;
}

message DecrementList {
  repeated Size sizes = 1;
}

message Size {
  int32 size = 1;
}

message Embeddings {
  repeated float embedding = 1;
}

message EmbeddingModelConfig {
  string model_name = 1;
  int32 max_length = 2;
  int32 dimension = 3;
  string metric_type = 4;
}

message LLMConfig {
  int32 context_size = 1;
  int32 context_window = 2;
  int32 max_new_tokens = 3;

  map<string, string> map = 4;
}

